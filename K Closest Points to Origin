class Solution {
    static class pair implements Comparable<pair>{
        int dis;
        int x;
        int y;
        public pair(int dis,int x,int y){
            this.dis=dis;
            this.x=x;
            this.y=y;
        }
        @Override
        public int compareTo(pair o){
            return this.dis-o.dis;
        }
    }
    public int[][] kClosest(int[][] arr, int k) {
        PriorityQueue<pair>pq=new PriorityQueue<>();
        ArrayList<Integer>ans=new ArrayList<>();
        for(int i=0;i<arr.length;i++){
            int dis=arr[i][0]*arr[i][0]+arr[i][1]*arr[i][1];
                pq.add(new pair(dis,arr[i][0],arr[i][1]));
            }
        int [][]arr1=new int[k][2];
        for(int i=0;i<k && pq.size()>0;i++){
            arr1[i][0]=pq.peek().x;
            arr1[i][1]=pq.peek().y;
            pq.remove();
        }
        return arr1;
    }
}
