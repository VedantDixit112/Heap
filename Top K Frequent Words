class Solution {
    static class pair implements Comparable<pair>{
        String str;
        int val;
        pair(String str,int val){
            this.str=str;
            this.val=val;
        }
        @Override
        public int compareTo(pair p){
            if(this.val==p.val){
                return this.str.compareTo(p.str);
            }
            return p.val-this.val;
        }
    }
    public List<String> topKFrequent(String[] words, int k) {
        TreeMap<String,Integer>map=new TreeMap<>();
        List<String>ans=new ArrayList<>();
        for(String str:words){
            map.put(str,map.getOrDefault(str,0)+1);
        }
        PriorityQueue<pair>pq=new PriorityQueue<>();
        for(String l:map.keySet()){
            pq.add(new pair(l,map.get(l)));
        }
        for(int i=0;i<k;i++){
            ans.add(pq.peek().str);
            pq.poll();
        }
        return ans;
    }
}
